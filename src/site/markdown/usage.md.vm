# Usage

Some goals are only runnable with a configuration in the POM file.

Some goals are meant to be run from the command line.

If you are planning to use the plugin from command line, for example the goals _list_ or _tree_,
you should add the plugin's groupId to your `~/.m2/settings.xml` file:

    <settings>
      ...
        <pluginGroups>
            <pluginGroup>com.github.mikkoi</pluginGroup>
        </pluginGroups>
      ...
    </settings>


## Goal: help

    mvn projects:help -Ddetail=true -Dgoal=<goal name>


## Goal: list

List projects in a multi-module build from the command line:

    mvn projects:list -Dprojects.list.sortOrder=alphabetic

    mvn --quiet projects:list -Dprojects.forceStdout -Dprojects.list.includes="*hello*,db"

    mvn projects:list -Dprojects.list.printFormat="{artifactId}:{version}:{packaging}:{absPath}"


## Goal: add-dependencies

The goal add-dependencies is meant to be configured in the POM file of a (sub)project
that should depend on all or a subset of projects in the multi-module build.
It will add dependencies to the project during the build.

One possible use case is a test-aggregator project (e.g. [Jacoco](https://www.jacoco.org/jacoco/trunk/doc/report-aggregate-mojo.html))
that has to depend on all other projects so that all tests in the build
are run and result files are ready for collecting and merging (aggregating) together.

This goal is not safe if the build is run in parallel mode (`-T` option of Maven).
It should be used only in single-threaded builds. If you need to support parallel builds,
take a look at the Maven Enforcer Rule
[dependOnAllProjects](https://github.com/mikkoi/maven-enforcer-rule-depend-on-all-projects/).

Example configuration:

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.mikkoi</groupId>
                <artifactId>projects-maven-plugin</artifactId>
                <version>${project.version}
                <executions>
                    <execution>
                        <id>add-dependencies</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>add-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>project-to-exclude</exclude>
                                <exclude>another-project-to-exclude</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


## Goal: create-bom

The goal create-bom is meant to be configured in the POM file of a subproject
or the root project. You can also use it from the command line.
It will create a new Maven project and save it by default to `${project.build.directory}/bom/pom.xml`.
This project will be a
[BOM](https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Bill_of_Materials_.28BOM.29_POMs)
(Bill Of Materials) project with packaging type **pom**.
It will contain dependencyManagement entries for all or a subset of projects in the multi-module build.
You can override the output location with the parameter `bomFilepath`.

The new BOM project will have the same _groupId_ as the project where the goal is configured
and the _artifactId_ will be **bom** by default.
You can override the groupId and artifactId.
You can also override the version of the BOM project. This is probably what you want to do,
because BOM projects are often versioned independently of the projects they include.

The new BOM project will have no parent,
but it will have most of the meta information copied from the project where the goal is configured.
This includes description, url, licenses, developers, scm, issueManagement and others.

After BOM is created, you need a separate deployment or publishing process for it.
It would not make sense to treat the BOM project as a normal subproject
with the parent being the root project.

Example configuration:

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.mikkoi</groupId>
                <artifactId>projects-maven-plugin</artifactId>
                <version>${project.version}
                <executions>
                    <execution>
                        <id>create-bom</id>
                        <phase>install</phase>
                        <goals>
                            <goal>create-bom</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>project-to-include-*</include>
                            </includes>
                            <excludes>
                                <exclude>project-to-exclude</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


## License

Apache License Version 2.0, January 2004
